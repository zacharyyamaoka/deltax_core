<?xml version="1.0"?>

<!-- ros2 launch bam_descriptions display.launch.py model:='robots/onedof.urdf.xacro' -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="onedof_robot">
  <xacro:include filename="$(find bam_descriptions)/urdf/common.xacro" />

  <xacro:arg name="transport_path" default=""/>
  <xacro:property name="transport_path" value="$(arg transport_path)" />

  <xacro:arg name="mock_hardware" default="true"/>
  <xacro:property name="mock_hardware" value="$(arg mock_hardware)" />

  <link name="base_link"/>

  <joint name="camera_rack_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_rack"/>
  </joint>

  <link name="camera_rack">
    <visual>
      <geometry>
          <mesh filename="package://bam_descriptions/meshes/camera_rack.stl"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <material name="StoglRobotics/LightGrey"/>
  </visual>
  </link>

  <joint name="onedof_rack_joint" type="fixed">
    <origin xyz="-0.007 0.016 -0.603" rpy="0 0 0"/>
    <parent link="camera_rack"/>
    <child link="onedof_rack"/>
  </joint>

  <link name="onedof_rack">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <geometry>
          <mesh filename="package://bam_descriptions/meshes/one_dof/onedof_base.stl"/>
      </geometry>
      <material name="Ghost"/>
  </visual>
  </link>

  <joint name="left_joint_1" type="revolute">
    <origin xyz="0 0 0.029" rpy="0 0 0"/>
    <parent link="onedof_rack"/>
    <child link="link1"/>
    <axis xyz="0 0 1"/>
    <limit lower="0" upper="2.45742" effort="10" velocity="1"/>
  </joint>

  <link name="link1">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <geometry>
          <mesh filename="package://bam_descriptions/meshes/one_dof/onedof_link.stl"/>
      </geometry>
      <material name="Ghost"/>
    </visual> 
  </link>

  <joint name="aruco_white_joint" type="fixed">
    <origin xyz="0.250 0 0.004" rpy="0 0 0"/>
    <parent link="link1"/>
    <child link="aruco_white_link"/>
  </joint>

  <link name="aruco_white_link">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <geometry>
          <mesh filename="package://bam_descriptions/meshes/one_dof/onedof_aruco_white.stl"/>
      </geometry>
      <material name="White"/>
    </visual> 
  </link>

  <joint name="aruco_black_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="aruco_white_link"/>
    <child link="aruco_black_link"/>
  </joint>

  <link name="aruco_black_link">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <visual>
      <geometry>
          <mesh filename="package://bam_descriptions/meshes/one_dof/onedof_aruco_black.stl"/>
      </geometry>
      <material name="Black"/>
    </visual> 
  </link>


  <joint name="aruco_tracker_joint" type="fixed">
    <origin xyz="0 0 0.002" rpy="0 0 0"/>
    <parent link="aruco_white_link"/>
    <child link="aruco_tracker"/>
  </joint>

  <link name="aruco_tracker"/>


  <joint name="camera_fixed_joint" type="fixed">
      <origin xyz="0.0 0.205 -0.003" rpy="0 0 0" />
      <parent link="camera_rack" />
      <child link="camera_base_link" />
  </joint>

  <link name="camera_base_link"/>

  <!-- Real Sense -->
  <xacro:arg name="use_nominal_extrinsics" default="false"/>
  <xacro:arg name="add_plug" default="false" />
  <xacro:arg name="use_mesh" default="true" />

  <xacro:include filename="$(find realsense2_description)/urdf/_d435.urdf.xacro" />
  
  <xacro:sensor_d435 parent="camera_base_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)" use_mesh="$(arg use_mesh)">
    <origin xyz="0.0 -0.0125 -0.01015" rpy="0 ${pi/2} ${pi/2}" />
  </xacro:sensor_d435>


  <ros2_control name="onedof_interface" type="system">

    <hardware>

        <xacro:if value="${mock_hardware}">
            <plugin>mock_components/GenericSystem</plugin>
            <param name="mock_sensor_commands">"true"</param>
        </xacro:if>

        <xacro:unless value="${mock_hardware}">
            <plugin>bam_hardware_interface/MoteusHardwareInterface</plugin>
        </xacro:unless>
        
        <param name="transport_path">${transport_path}</param>
    </hardware>

    <xacro:macro name="joint_definition" params="n can_id init_pos">
      <!-- Prefix with "left" so that you can use ros2_control controllers from left arm -->
        <joint name="left_joint_${n}">   
            <param name="id">${can_id}</param>

            <command_interface name="position"/>
            <command_interface name="velocity"/>
            <command_interface name="max_torque"/>
            <command_interface name="kp_scale"/>
            <command_interface name="kd_scale"/>
            <command_interface name="effort"/>
            <command_interface name="flag"/>

            <state_interface name="position">
              <param name="initial_value">${init_pos}</param>
            </state_interface>

            <state_interface name="velocity"/>
            <state_interface name="effort"/>
            
            <state_interface name="mode"/>          
            <state_interface name="motor_temperature"/>      
            <state_interface name="board_temperature"/>      
            <state_interface name="voltage"/>      
            <state_interface name="fault"/>      
        </joint>
    </xacro:macro>

    <xacro:joint_definition  n="1" can_id="11" init_pos="0"/>
  </ros2_control>
</robot>
